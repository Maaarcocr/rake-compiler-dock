name: Build docker images
on: [push, pull_request]

jobs:
  # These jobs use Buildx layer caching
  docker_build:
    name: Build docker images

    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: x86-mingw32
          - platform: x64-mingw32
          - platform: x86-linux
          - platform: x86_64-linux
          - platform: x86_64-darwin
          - platform: arm64-darwin
          - platform: arm-linux
          - platform: aarch64-linux
          - platform: jruby

    runs-on: ubuntu-latest
    env:
      PLATFORM: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v2

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: tmp/build-cache
          key: ${{ runner.os }}-${{ matrix.platform }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.platform }}-buildx

      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.0"
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically

      - name: Build docker image
        run: |
          docker buildx create --driver docker-container --use
          bundle exec rake build:${PLATFORM} RCD_DOCKER_BUILD="docker buildx build --cache-from=type=local,src=tmp/build-cache --cache-to=type=local,dest=tmp/build-cache-new --load"

      - name: Move cache
        run: |
          rm -rf tmp/build-cache
          mv tmp/build-cache-new tmp/build-cache

      - name: Build rcd_test.gem
        run: |
          cd test/rcd_test/
          bundle install
          bundle exec rake gem:${PLATFORM}

      - name: Install rcd_test.gem
        if: matrix.platform != 'jruby'
        run: |
          cd test/rcd_test/
          bundle exec gem inst -l pkg/rcd_test-*-${PLATFORM}.gem

      - name: Test rcd_test.gem
        if: matrix.platform == 'x86_64-linux'
        run: |
          cd test/rcd_test/
          bundle exec rake test
